<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>projet </title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

    <!-- CSS pour logo gpc -->
   <style>
        #logo { max-width: 150px; } /* Ajustez la taille du logo selon vos besoins */

        form {
            max-width: 300px;
            margin: 20px auto;
        }
    </style>    
    <!-- CSS pour openstreetmap -->

    <style>
        #map { height: 400px; }
    </style>
         <!-- CSS pour Formulaire d'analyse de potentiel solaire -->

     <style>
        #map { height: 400px; }
        #solarPotentialResults { margin-top: 20px; }
        #proposedConfigurations { margin-top: 20px; }
        form {
            max-width: 300px;
            margin: 20px auto;
        }
        input[type="text"], input[type="number"], input[type="submit"], input[type="checkbox"] {
            display: block;
            width: 100%;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <!-- logo pour gpc -->
    <img id="logo" src="C:\Users\badre\OneDrive\Bureau\projet PFE/logo gpc.png" alt="Logo de votre entreprise">

     <!-- partie de leaflet -->
    <h1>Leaflet</h1>
    <div id="map"></div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        var map = L.map('map').setView([34.74056, 10.76028], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        L.marker([34.74056, 10.76028]).addTo(map)
            .bindPopup('position .')
            .openPopup();
    </script>
    <h1>choisir panneaux</h1>
    <select id="apiSelect">
        <option value="" selected disabled>Veuillez choisir</option>
    </select> <!-- Liste déroulante pour afficher les APIs -->
    <script>
        
        // Récupération des données à partir de l'API
        fetch('https://gpc.tn/simulateur/panneaux.php')
            .then(response => response.json())
            .then(data => {
                const apiSelect = document.getElementById('apiSelect');

                // Parcourir les données et les ajouter à la liste déroulante
                for (const entry of data) {
                    const option = document.createElement('option');
                    option.textContent = entry.name; // Remplacer 'id' par le nom de la propriété contenant l'identifiant
                    apiSelect.appendChild(option);
                }
            })
            .catch(error => console.error('Une erreur s\'est produite:', error));
        
    </script>
    <h1>Formulaire d'analyse de potentiel solaire</h1>
    <form id="solarForm">
        <label for="location">Localisation géographique :</label>
        <input type="text" id="location" name="location" required>

        <label for="power">Puissance requise de la pompe à eau (kW) :</label>
        <input type="number" id="power" name="power" step="0.01" required>

        <input type="checkbox" id="solarPanels" name="solarPanels">
        <label for="solarPanels">Panneaux solaires disponibles</label>

        <input type="submit" value="Analyser le potentiel solaire">
    </form>

    <div id="solarPotentialResults">
        <!-- Les résultats de l'analyse du potentiel solaire seront affichés ici -->
    </div>

    <h2>Résultats de l'analyse</h2>
    <div id="proposedConfigurations">
        <!-- Les configurations proposées seront affichées ici -->
    </div>

    <script>
        // Gestion de la soumission du formulaire
        document.getElementById("solarForm").addEventListener("submit", function(event) {
            event.preventDefault(); // Empêcher l'envoi du formulaire par défaut

            // Récupération des valeurs du formulaire
            var location = document.getElementById("location").value;
            var powerRequired = parseFloat(document.getElementById("power").value);
            var hasSolarPanels = document.getElementById("solarPanels").checked;

            // Simulation d'une analyse de potentiel solaire
            var potentialResults = document.getElementById("solarPotentialResults");
            potentialResults.innerHTML = "<p>Résultats de l'analyse du potentiel solaire :</p>" +
                                          "<p>Localisation géographique : " + location + "</p>" +
                                          "<p>Puissance requise de la pompe à eau : " + powerRequired + " kW</p>" +
                                          "<p>Panneaux solaires disponibles : " + (hasSolarPanels ? "Oui" : "Non") + "</p>";

            // Ici, vous pouvez implémenter la logique pour proposer des configurations de systèmes photovoltaïques
            // en fonction des données saisies par l'utilisateur et des données de l'analyse
            // Par exemple, vous pouvez appeler une API externe ou effectuer des calculs localement
            // Les configurations proposées peuvent être affichées dans la section #proposedConfigurations
        });
    </script>
</body>
</html>
